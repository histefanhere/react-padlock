{"version":3,"sources":["components/Digit.tsx","components/shackle.svg","components/Shackle.tsx","components/Padlock.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Digit","props","digit","digitID","className","onClick","value","Shackle","easing","locked","duration","loop","autoplay","translateY","src","shackle","alt","Padlock","min","max","initialValues","Array","i","length","Math","floor","random","useState","values","setValues","setLockState","correctValues","ref","React","createRef","handleClick","id","direc","newValues","slice","isCorrect","current","anime","targets","translateX","App","href","octoColor","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cca61f34.chunk.js","sourcesContent":["import React from 'react';\nimport './Digit.scss';\n\ninterface DigitProps {\n    value: number;\n    digitID: number;\n    // the onClick event hook gets passed which digit this is and a direction\n    // 1 for an increase and -1 for a decrease.\n    onClick: (digitID: number, direc: number) => void;\n}\n\nfunction Digit (props: DigitProps) {\n    // Digit is a completely controlled component - everything is defined\n    // through it's props, and it stores no state of itself.\n\n    const digit = props.digitID;\n\n    return (\n        <div className=\"digit\">\n            <button className=\"digit-btn\" onClick={() => { props.onClick(digit, 1) }}><span></span></button>\n            <div className=\"digit-label\">\n                {`${props.value}`}\n            </div>\n            <button className=\"digit-btn\" onClick={() => { props.onClick(digit, -1) }}><span></span></button>\n        </div>\n    );\n}\n\nexport default Digit;","export default __webpack_public_path__ + \"static/media/shackle.c927151e.svg\";","import React from 'react';\nimport Anime from 'react-anime';\n\nimport './Padlock.scss';\nimport shackle from './shackle.svg';\n\ninterface ShackleProps {\n    locked: boolean;\n}\n\nfunction Shackle(props: ShackleProps) {\n    return (\n        <Anime \n            easing={props.locked ? \"easeInBack\" : \"easeOutBack\"}\n            duration={400}\n            loop={false}\n            autoplay={true}\n            translateY={props.locked ? \"160px\" : \"40px\"}\n        >\n            <div><img src={shackle} alt=\"shackle\" className=\"shackle\"/></div>\n        </Anime>\n    )\n}\n\nexport default Shackle;","import React, { useState } from 'react';\nimport anime from 'animejs';\n\nimport './Padlock.scss';\nimport Digit from './Digit';\nimport Shackle from './Shackle';\n\n// Utility function for randomly generating a number (inclusive)\nconst randomInt = (min: number, max: number): number => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  };\n\n\nfunction Padlock() {\n    // Generate a list of 3 random numbers to be the initial values of the counters\n    let initialValues: number[] = Array(3)\n    for (let i=0; i<initialValues.length; i++) initialValues[i] = randomInt(0, 9);\n\n    const [values, setValues] = useState(initialValues);\n    const [locked, setLockState] = useState(true);\n\n    const correctValues = [1, 2, 3];\n\n    // Reference to itself so we can animate the padlock\n    const ref = React.createRef<HTMLDivElement>();\n\n    // Locks or Unlocks the padlock\n    const toggleLock = () => {\n        setLockState(!locked);\n    }\n\n    const handleClick = (id: number, direc: number) => {\n        if (!locked) {\n            return;\n        }\n        // Keeps `values` immutable\n        let newValues: Array<number> = values.slice();\n        newValues[id] = (newValues[id] + direc + 10) % 10;\n        setValues(newValues);\n    }\n\n    // Function compares if the stored `values` state is equivalent to `correctValues`\n    // By comparing each individual element.\n    const isCorrect = () => {\n        for (let i = 0; i < 3; i++) {\n            if (values[i] !== correctValues[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    // Called when the \"validate\" button is pressed\n    const validate = () => {\n        const correct: boolean = isCorrect();\n        if (correct) {\n            // If they're right, toggle the locked state\n            toggleLock();\n        }\n        else {\n            // If they're wrong, show the incorrect animation (shaking the padlock)\n            if (ref && ref.current) {\n                anime({\n                    targets: ref.current,\n                    translateX: [\n                        { value: '5px' },\n                        { value: '-5px' },\n                        { value: '5px' },\n                        { value: '0px' }\n                    ],\n                    duration: 400,\n                    autoplay: true,\n                    easing: 'easeInOutSine'\n                });\n            }\n        }\n    }\n\n    return (\n        <div className=\"padlock-app\">\n            <div className=\"padlock\" ref={ref}>\n                <Shackle locked={locked}/>\n                <div className=\"padlock-body\">\n                    {/* This could be done in a loop, but it'd be more effort than it's worth. */}\n                    <Digit digitID={0} value={values[0]} onClick={handleClick}/>\n                    <Digit digitID={1} value={values[1]} onClick={handleClick}/>\n                    <Digit digitID={2} value={values[2]} onClick={handleClick}/>\n                </div>\n            </div>\n            <div className=\"btns\">\n                <button className=\"validate-btn\" onClick={validate}>Validate</button>\n            </div>\n        </div>\n    );\n}\n\nexport default Padlock;","import React from 'react';\nimport './App.scss';\nimport GithubCorner from 'react-github-corner';\n\nimport Padlock from './components/Padlock';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GithubCorner href=\"https://github.com/histefanhere/react-padlock\" octoColor='teal' />\n      <Padlock />\n      <footer>Made with ❤️ by <a href=\"https://github.com/histefanhere\" target=\"_blank\" rel=\"noopener noreferrer\">Histefanhere</a> for a <a href=\"https://github.com/NZMSA/2021-introduction-to-general-software-development\" target=\"_blank\" rel=\"noopener noreferrer\">NZMSA Workshop Competition</a></footer>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}